
```{r}
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
```



```{r}

s
# Install and load the packages if necessary
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("readr", quietly = TRUE)) install.packages("readr")
library(dplyr)
library(readr)

# Read the CSV file
data <- read_csv("2024MarBiospec.csv")

# Select the specified columns and filter rows where site_id_l is equal to 'site03'
# and redcap_event_name is "5_year_follow_up_arm_1"
filtered_data <- data %>%
    select(
        id_redcap, redcap_event_name, demo_sex_v2b_l, site_id_l,
        site_name, asnt_timestamp, bal_test1_result_y, tox1_results_y,
        hair_status_y, hormone_sal_sex, dna_blood_y, teeth_donated_1_p
    ) %>%
    filter(
        site_id_l == "site03",
        redcap_event_name == "5_year_follow_up_arm_1"
    )

filtered_data <- filtered_data %>%
    mutate(tox1_results_y = case_when(
        tox1_results_y == 1 ~ "1, Yes",
        tox1_results_y == 2 ~ "2, No",
        TRUE ~ "3, Other" # Collapses all other categories into "3, Other"
    ))



# Create a bar chart for the recoded tox1_results_y variable
ggplot(filtered_data, aes(x = tox1_results_y)) +
    geom_bar() +
    labs(
        title = "Count of tox1_results_y Categories",
        x = "Category",
        y = "Count"
    ) +
    theme_minimal()

str(filtered_data)



```


```{r}

library(dplyr)
library(ggplot2)
library(lubridate) # For handling date-time objects

# Ensure tox1_results_y is factor or character for filtering
filtered_data$tox1_results_y <- as.character(filtered_data$tox1_results_y)

# Convert asnt_timestamp to Date format (assuming it's in a recognizable format)
filtered_data$asnt_timestamp <- as.Date(filtered_data$asnt_timestamp)

# Filter for "Yes" responses
yes_responses <- filtered_data %>%
    filter(tox1_results_y == "1, Yes")

# Aggregate counts by week
weekly_counts <- yes_responses %>%
    mutate(week = floor_date(asnt_timestamp, "week")) %>%
    group_by(week) %>%
    summarise(count = n())

# Plot
ggplot(weekly_counts, aes(x = week, y = count)) +
    geom_line() + # Draw the line
    geom_point() + # Add points to each data point
    labs(
        title = "Weekly Count of 'Yes' Responses",
        x = "Week",
        y = "Count of 'Yes' Responses"
    ) +
    theme_minimal()


```



----

tox1_results_y:
3, Not applicable (not randomized/not needed) | 1, Yes | 2, No | 4, Participant unable to complete | 5, Participant refused | 7, Institution not authorized to collect samples due to COVID | 8, Staff discomfort due to COVID | 9, Exceed 15min of < 6ft distance from youth (COVID) | 10, Not approved by ABCD for collection | 6, Not collected (other)

