---
title: "Enhancing Research with Modern Data Tools"
format:
  revealjs:
    slide-level: 2
    theme: night
    transition: convex
    highlight-theme: monokai

---

```{mermaid}
graph TD
    Python --> Syntax
    Python --> Libraries
    Python --> Data_Types
    Python --> Control_Flows
    Python --> Functions
    Python --> Object_Oriented
    Python --> Error_Handling
    Python --> Modules
    Python --> File_IO
    Python --> Standard_Library
    Python --> Third_Party_Modules

    Data_Types --> Primitive[Primitive Data Types]
    Data_Types --> Collections[Collections Data Types]

    Primitive --> Integers
    Primitive --> Floats
    Primitive --> Strings
    Primitive --> Booleans

    Collections --> Lists
    Collections --> Tuples
    Collections --> Sets
    Collections --> Dictionaries

    Control_Flows --> If_Statement
    Control_Flows --> For_Loop
    Control_Flows --> While_Loop
    Control_Flows --> Try_Except

    Object_Oriented --> Classes
    Object_Oriented --> Objects
    Object_Oriented --> Inheritance
    Object_Oriented --> Polymorphism
    Object_Oriented --> Encapsulation

    File_IO --> Reading_Files[Reading Files]
    File_IO --> Writing_Files[Writing Files]

    Standard_Library --> Math_Module[Math Module]
    Standard_Library --> Datetime_Module[Datetime Module]
    Standard_Library --> Sys_Module[Sys Module]
    Standard_Library --> Os_Module[Os Module]

    Third_Party_Modules --> Requests[Requests Module]
    Third_Party_Modules --> Numpy[Numpy Module]
    Third_Party_Modules --> Pandas[Pandas Module]
    Third_Party_Modules --> Matplotlib[Matplotlib Module]
```

---

```{mermaid}
sequenceDiagram
    participant U as User
    participant V as VS Code
    participant G as GitHub Codespaces

    U->>V: Start VS Code with GitHub Codespaces extension
    V->>U: Request GitHub authentication
    U->>V: Provide GitHub authentication
    V->>G: Fetch list of available Codespaces
    G->>V: Return list of Codespaces
    U->>V: Select a Codespace
    V->>G: Initialize selected Codespace
    G->>V: Open development environment in VS Code
    U->>V: Interact with Codespace (code, run, debug)
    U->>V: Commit and push changes
    V->>G: Sync changes to GitHub repository
    U->>V: Stop/close Codespace session
    V->>G: Disconnect from Codespace

```

---

```{dot}
digraph G {
    node [shape=box];

    subgraph cluster_0 {
        style=filled;
        color=lightgrey;
        label = "R Ecosystem";
        R -> { "ggplot2" "dplyr" "shiny" "tidyr" "caret" };
        "ggplot2" [style=filled, color="#FDBE85"];
        "dplyr" [style=filled, color="#FDBE85"];
        "shiny" [style=filled, color="#FDBE85"];
        "tidyr" [style=filled, color="#FDBE85"];
        "caret" [style=filled, color="#FDBE85"];
    }

    subgraph cluster_1 {
        style=filled;
        color=lightblue;
        label = "Python Ecosystem";
        Python -> { "Matplotlib" "Pandas" "Scikit-learn" "NumPy" "TensorFlow" };
        "Matplotlib" [style=filled, color="#FDCDAC"];
        "Pandas" [style=filled, color="#FDCDAC"];
        "Scikit-learn" [style=filled, color="#FDCDAC"];
        "NumPy" [style=filled, color="#FDCDAC"];
        "TensorFlow" [style=filled, color="#FDCDAC"];
    }

    R -> Python [style=dashed, constraint=false, label="interoperability\nvia reticulate"];
}

```

---

```{dot}
digraph G {
    rankdir=LR;
    node [shape=plaintext];
    // Define nodes for R and Python
    R [label="R Ecosystem\n\n" shape=ellipse style=filled color="#76b7b2" fontcolor=white];
    Python [label="Python Ecosystem\n\n" shape=ellipse style=filled color="#f28e2b" fontcolor=white];

    // Define subgraph for R
    subgraph cluster_R {
        label = "R Libraries";
        color="#4e79a7";
        style="rounded";
        ggplot2 [label="ggplot2" URL="https://ggplot2.tidyverse.org/" shape=box style=filled color="#b07aa1" fontcolor=white];
        dplyr [label="dplyr" URL="https://dplyr.tidyverse.org/" shape=box style=filled color="#9c755f" fontcolor=white];
        shiny [label="shiny" URL="https://shiny.rstudio.com/" shape=box style=filled color="#f1ce63" fontcolor=black];
        tidyr [label="tidyr" URL="https://tidyr.tidyverse.org/" shape=box style=filled color="#59a14f" fontcolor=white];
        caret [label="caret" URL="http://topepo.github.io/caret/" shape=box style=filled color="#edc949" fontcolor=black];
        R -> {ggplot2 dplyr shiny tidyr caret};
    }

    // Define subgraph for Python
    subgraph cluster_Python {
        label = "Python Libraries";
        color="#59a14f";
        style="rounded";
        Matplotlib [label="Matplotlib" URL="https://matplotlib.org/" shape=box style=filled color="#76b7b2" fontcolor=white];
        Pandas [label="Pandas" URL="https://pandas.pydata.org/" shape=box style=filled color="#ff9da7" fontcolor=black];
        ScikitLearn [label="Scikit-learn" URL="https://scikit-learn.org/" shape=box style=filled color="#4e79a7" fontcolor=white];
        NumPy [label="NumPy" URL="https://numpy.org/" shape=box style=filled color="#f28e2b" fontcolor=white];
        TensorFlow [label="TensorFlow" URL="https://www.tensorflow.org/" shape=box style=filled color="#e15759" fontcolor=white];
        Python -> {Matplotlib Pandas ScikitLearn NumPy TensorFlow};
    }

    // Interoperability edge
    R -> Python [label="interoperability\nvia reticulate", style=dashed, color="#bab0ab"];
}

```

---

![Programming Languages](https://example.com/path/to/programming_languages.png "Programming Languages"){: .custom-img }

## Different Languages for Different Tasks

- **R, Python**: Excellent for data analysis, statistics, and machine learning.
- **Julia**: Known for high-performance numerical analysis and computational science.
- **JavaScript**: Primarily used for creating interactive web pages.
- **C**: Low-level programming for system software and embedded systems.

# File Formats and Text Formats üìÑ

## Understanding File Formats

File formats like `.qmd` (Quarto Markdown), `.json` (JavaScript Object Notation), and `.md` (Markdown) define how information is stored and structured in a file.

![File Formats](https://example.com/path/to/file_formats.png "File Formats"){: .custom-img }

## Text Formats: ASCII vs. Unicode

- **ASCII**: A character encoding standard for electronic communication, representing text in computers. Limited to 128 characters.
- **Unicode**: A universal character encoding standard that includes a repertoire of more than 143,000 characters covering 154 modern and historic scripts, as well as emoji and symbols.

![Text Formats](https://example.com/path/to/text_formats.png "Text Formats"){: .custom-img }

## Bits and Bytes: The Basics of Digital Storage

- **Bit**: The smallest unit of data in computing, represented as either 0 or 1.
- **Byte**: A group of 8 bits. Used to encode a single character of text in most computer systems.

![Bits and Bytes](https://example.com/path/to/bits_bytes.png "Bits and Bytes"){: .custom-img }

Understanding these basics helps in grasping how data and instructions are represented and manipulated in computing, laying the groundwork for exploring more advanced tools and languages.

---

# GitHub and Version Control üìö

## Understanding Git and GitHub

Git is a distributed version control system that tracks changes in source code during software development. GitHub is a cloud-based hosting service that lets you manage Git repositories.

![GitHub Logo](https://example.com/path/to/github_logo.png "GitHub"){: .custom-img }

## Benefits for Research

- **Collaboration**: Simplifies working on projects with multiple contributors. ü§ù
- **Version Control**: Keeps a history of changes, allowing you to revert to previous states. üïí
- **GitHub Projects**: An excellent tool for managing research projects with Kanban boards. üìã

<a href="https://github.com" class="custom-button">Explore GitHub</a>

---

# Integrated Development Environments (IDEs) üíª

## Why IDEs?

IDEs enhance coding efficiency with features like syntax highlighting, code completion, and debugging tools.

## VSCode

Visual Studio Code (VSCode) is a powerful, open-source IDE that supports multiple programming languages and extensions, making it ideal for our diverse projects.

![VSCode](https://example.com/path/to/vscode.png "VSCode"){: .custom-img }

## RStudio

For those familiar with R, RStudio provides an excellent environment tailored for R development, including data visualization and package management.

![RStudio](https://example.com/path/to/rstudio.png "RStudio"){: .custom-img }

---

# Markdown: Simplifying Documentation üìù

## What is Markdown?

Markdown is a lightweight markup language with plain-text formatting syntax. Its main goal is to be readable and easy to write, making it ideal for documentation, note-taking, and content creation.

![Markdown Logo](https://example.com/path/to/markdown.png "Markdown"){: .custom-img }

## Benefits for Research Labs

- **Simplicity**: Easy to learn and use, even for those without a background in web development. üöÄ
- **Versatility**: Supports various output formats including HTML, PDF, and slides, making it suitable for reports, presentations, and web content. üìä
- **Collaboration**: Plain text format facilitates version control and collaboration through platforms like GitHub. üë•

## Getting Started with Markdown

- Use any text editor to create a `.md` file.
- Learn the basic syntax: headings, lists, links, images, code blocks, etc.
- Use tools like Pandoc to convert Markdown files to other formats.

<a href="https://www.markdownguide.org" class="custom-button">Learn More About Markdown</a>

---

# Quarto for Reproducible Research üìä

## What is Quarto?

Quarto is an open-source scientific and technical publishing system that allows you to create dynamic and reproducible research documents.

![Quarto](https://example.com/path/to/quarto.png "Quarto"){: .custom-img }

## Benefits

- **Integration**: Works seamlessly with Jupyter, R Markdown, and Observable. üîó
- **Flexibility**: Supports HTML, PDF, and Word outputs. üìÑ

<a href="https://quarto.org" class="custom-button">Get Started with Quarto</a>

---

# GitHub Codespaces: Cloud Development Environments ‚òÅÔ∏è

## What are GitHub Codespaces?

GitHub Codespaces provides a complete, configurable dev environment within GitHub that allows you to develop entirely in the cloud. It eliminates the need to maintain local development setups, making it easier to start new projects or switch between them.

![GitHub Codespaces](https://example.com/path/to/codespaces.png "GitHub Codespaces"){: .custom-img }

## Benefits for Research Labs

- **Accessibility**: Access your development environment from anywhere, on any device. üåç
- **Consistency**: Ensure a consistent development environment for all lab members, reducing "works on my machine" problems. üîÑ
- **Integration**: Seamlessly integrates with GitHub repositories, pull requests, and actions. üîó

## Getting Started with Codespaces

- Navigate to a GitHub repository and click the "Code" button.
- Select "Open with Codespaces" and then "New codespace" to create your environment.

<a href="https://github.com/features/codespaces" class="custom-button">Explore GitHub Codespaces</a>

---

# Apache Arrow for Efficient Data Processing üèπ

## Overview

Apache Arrow is a cross-language development platform for in-memory data, designed to improve the efficiency of data processing and data exchange between systems.

![Apache Arrow](https://example.com/path/to/apache_arrow.png "Apache Arrow"){: .custom-img }

## Why Apache Arrow?

- **Performance**: Optimizes data processing speed. ‚ö°
- **Interoperability**: Facilitates data exchange across different programming languages. üîÑ

---

# Polars: A Fast Data Frame Library üêº

## Introduction to Polars

Polars is a high-performance data frame library written in Rust, offering lazy computations and efficient memory usage, making it ideal for large datasets.

![Polars](https://example.com/path/to/polars.png "Polars"){: .custom-img }

## Why Polars?

- **Speed**: Designed for fast data manipulation and analysis. üí®
- **Compatibility**: Works well with Apache Arrow. ‚úîÔ∏è

---

# Conclusion üéâ

Today, we've covered a range of tools that can significantly enhance our research lab's efficiency, collaboration, and data analysis capabilities. By integrating GitHub, IDEs like VSCode and RStudio, Quarto, Apache Arrow, and Polars into our workflow, we can streamline our research processes and achieve better outcomes.

Let's embrace these technologies to push the boundaries of our research.

---

### See also

- üåê [GitHub Documentation](https://www.google.com/search?q=GitHub+documentation)
- üíª [VSCode](https://www.google.com/search?q=VSCode) and [RStudio](https://www.google.com/search?q=RStudio)
- üìä [Quarto Guide](https://www.google.com/search?q=Quarto+guide)
- üöÄ [Apache Arrow](https://www.google.com/search?q=Apache+Arrow)
- üìà [Polars Documentation](https://www.google.com/search?q=Polars+dataframe)

### You may also enjoy

- üìù [Markdown Tutorial](https://www.google.com/search?q=Markdown+tutorial)
- üêç [Python for Data Science](https://www.google.com/search?q=Python+for+data+science)
- üìä [Data Visualization Techniques](https://www.google.com/search?q=data+visualization+techniques)

## Different Languages for Different Tasks

- **R**: ![R](https://example.com/path/to/r_icon.png "R"){: .custom-img } Excellent for data analysis, statistics, and machine learning.
- **Python**: ![Python](https://example.com/path/to/python_icon.png "Python"){: .custom-img } Excellent for data analysis, statistics, and machine learning.
- **Julia**: ![Julia](https://example.com/path/to/julia_icon.png "Julia"){: .custom-img } Known for high-performance numerical analysis and computational science.
- **JavaScript**: ![JavaScript](https://example.com/path/to/javascript_icon.png "JavaScript"){: .custom-img } Primarily used for creating interactive web pages.
- **C**: ![C](https://example.com/path/to/c_icon.png "C"){: .custom-img } Low-level programming for system software and embedded systems.